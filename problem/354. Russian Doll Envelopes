
//https://leetcode.com/problems/russian-doll-envelopes/discuss/2071477/Best-Explanation-with-Pictures
//https://www.youtube.com/watch?v=B1d2wV6mfzA
int cmp(const void *a, const void *b){
    int **x = (int**)a;
    int **y = (int**)b;
    
    if(x[0][0] == y[0][0]){
        return x[0][1] < y[0][1];
    }
    
    
    return x[0][0] > y[0][0];
}

int bs(int *queue, int index, int target){
    int left = 0, right = index - 1;
    
    while(left <= right){
        int mid = (left + right) / 2;
        if(target == queue[mid]){
            return mid;
        }
        else if(target > queue[mid]){
            left = mid + 1;
        }
        else{
            right = mid - 1;
        }
    }
    
    
    return left;
}

int maxEnvelopes(int** envelopes, int envelopesSize, int* envelopesColSize){
    int n = envelopesSize;
    
    qsort(envelopes, n, sizeof(envelopes[0]), cmp);
    
    int *queue = calloc(n, sizeof(int));
    int index = 0;
    
    for(int i = 0; i < n; i++){
        if(!index){
            queue[index++] = envelopes[i][1];
            continue;
        }
        
        int replace = bs(queue, index, envelopes[i][1]);
        if(!queue[replace]){
            queue[replace] = envelopes[i][1];
            index++;    
        }
        else if(queue[replace] > envelopes[i][1]){
            queue[replace] = envelopes[i][1];  
        }
    }
    
    
    return index;
}
