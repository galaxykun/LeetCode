

int lengthOfLongestSubstring(char * s){

    int start = 0, len = 0, count = 0;
    int judge[128] = {0};
    
    for(int i = 0, j = 0; i < strlen(s); i++){
        if(judge[s[i]]){
            if(count > len){
                len = count;
                start = i - count;
            }
            count = 0;
            memset(judge, 0, sizeof(judge));
            i = j;
            j++;
        }
        else{
            judge[s[i]]++;
            count++;
        }
    }
    if(count > len){
        len = count;
        start = strlen(s) - count;
    }
    
    return len;
}

/****other people's do****/
//遇到之前有出現過的字母，看跟之前出現過的相差多少，比目前記錄多的就記下來。

// int lengthOfLongestSubstring(char * s){  
//     int chars[128], idx = 128;
//     while (idx--) chars[idx] = -1; 
    
//     int start = -1, length = 0, localLength;
//     size_t c;
    
//     while (s[++idx] != '\0') {
//         c = (size_t) s[idx];
//         if (chars[c] > start) start = chars[c]; 
        
//         localLength = idx - start;printf("<%d %d %d> ",chars[c],idx,start);
//         if (length < localLength) length = localLength;
//         chars[c] = idx;
//     }
//     printf("\n");
//     return (start > -1 ? length : idx);
// }
