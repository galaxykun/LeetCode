//比較兩個點，小的抓下來並往後移一個點

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){
    
    //都是NULL的時候
    if(!list1 && !list2)
        return NULL;
    
    struct ListNode *merge = NULL;
    struct ListNode *curr = NULL;
    merge = (struct ListNode*)malloc(sizeof(struct ListNode));
    merge->next = NULL;
    curr = merge;
    
    while(1){
        
        //還有一邊還沒走完
        if(list1 == 0){
            curr->val = list2->val;
            list2 = list2->next;

            if(!list1 && !list2)
                break;
            
            struct ListNode *temp = (struct ListNode*)malloc(sizeof(struct ListNode));
            temp->next = NULL;
            curr->next = temp;
            curr = temp;
            continue;
        }
        if(list2 == 0){
            curr->val = list1->val;
            list1 = list1->next;

            if(!list1 && !list2)
                break;
            
            struct ListNode *temp = (struct ListNode*)malloc(sizeof(struct ListNode));
            temp->next = NULL;
            curr->next = temp;
            curr = temp;
            
            continue;
        }
        
        //which smaller
        if(list1->val <= list2->val){
            curr->val = list1->val;
            list1 = list1->next;
            
            if(!list1 && !list2)
                break;
            
            struct ListNode *temp = (struct ListNode*)malloc(sizeof(struct ListNode));
            temp->next = NULL;
            curr->next = temp;
            curr = temp;
        }
        else if(list2->val < list1->val){
            curr->val = list2->val;
            list2 = list2->next;

            if(!list1 && !list2)
                break;
            
            struct ListNode *temp = (struct ListNode*)malloc(sizeof(struct ListNode));
            temp->next = NULL;
            curr->next = temp;
            curr = temp;
        } 
    }
    
    return merge;
}

/****網路參考****/
// struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
//     struct ListNode  head;
//     struct ListNode  *h=&head;
//     if(l1==NULL && l2==NULL)
//         return NULL;
    
//     while(l1 && l2){
//         if(l1->val < l2->val){
//           h->next=l1;
//             l1=l1->next;
//             h=h->next;
//         }
//         else
//         {
//             h->next=l2;
//             l2=l2->next;
//             h=h->next;
//         }
//     }
//     if(l1){
//         h->next=l1;
//         }
//     if(l2){
//         h->next=l2;
//     }
//     return head.next;
// }
