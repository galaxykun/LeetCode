/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* convertBST(struct TreeNode* root){
    static int sum = 0, level = 0;
    
    if(!root)
        return NULL;
    
    level++;
    
    convertBST(root->right);
    
    root->val += sum;
    sum = root->val;
    
    convertBST(root->left);
    
    level--;
    
    if(!level){
        sum = 0;
        level = 0;
    }
    
    
    return root;
}

/****ohter people's do****/
// void helper(struct TreeNode* root, int *curr_sum) {
//     if(!root) {
//         return;
//     }

//     //go right first as everything on right is greater than root
//     helper(root->right, curr_sum);
//     root->val = root->val + *curr_sum;
//     *curr_sum = root->val;
//     //now go left, everything on left is lesser than root
//     helper(root->left, curr_sum);
// }


// struct TreeNode* convertBST(struct TreeNode* root) {  
//     int curr_sum = 0;
//     helper(root, &curr_sum);
//     return root;
// }
